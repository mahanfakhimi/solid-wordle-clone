@import url("https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@500&display=swap");

:root {
  --correct-color: #6aaa64;
  --present-color: #c9b458;
  --absent-color: #787c7e;
  --default-color: #d3d6da;
  --bg-color: #ffffff;
  --key-active-color: #a3a3a3;
  --cell-active-color: #000;
}

* {
  font-family: "Roboto Slab";
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  outline: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

.game-container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  row-gap: 2rem;
  height: 100vh;
  padding: 1rem;

  .game-board {
    display: flex;
    flex-direction: column;
    row-gap: 0.5rem;

    .row {
      display: flex;
      column-gap: 0.5rem;

      &.shake {
        animation: shake 0.5s;
      }

      &.celebrate {
        .cell {
          animation: dance 0.5s ease-in-out;
        }
      }

      .cell {
        width: 60px;
        height: 60px;
        border: 2px solid var(--default-color);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        font-weight: bold;
        transition: all 0.2s;

        &.scale {
          scale: 1.1;
        }

        &.flip {
          animation: flip 0.5s ease forwards;
        }

        &[data-active="true"] {
          border-color: var(--cell-active-color);
        }

        &[data-state="correct"] {
          background-color: var(--correct-color);
          border-color: var(--correct-color);
          color: white;
        }

        &[data-state="present"] {
          background-color: var(--present-color);
          border-color: var(--present-color);
          color: white;
        }

        &[data-state="absent"] {
          background-color: var(--absent-color);
          border-color: var(--absent-color);
          color: white;
        }
      }
    }
  }

  .keyboard {
    display: flex;
    flex-direction: column;
    row-gap: 0.5rem;

    .keyboard-row {
      display: flex;
      align-items: center;
      justify-content: center;
      column-gap: 0.5rem;

      .key {
        width: 40px;
        height: 40px;
        border: none;
        background-color: var(--default-color);
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.2s;

        @media (max-width: 768px) {
          width: 30px;
        }

        &:active {
          background-color: var(--key-active-color);
        }

        &.wide {
          flex: 1;
        }

        &[data-state="correct"] {
          background-color: var(--correct-color);
          color: white;
        }

        &[data-state="present"] {
          background-color: var(--present-color);
          color: white;
        }

        &[data-state="absent"] {
          background-color: var(--absent-color);
          color: white;
        }
      }
    }
  }

  .game-over {
    position: fixed;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    row-gap: 1rem;
    padding: 1rem;
    animation: scale 0.5s;
    transition: scale 0.5s, opacity 0.5s;
    z-index: 1;

    &.scale-out {
      scale: 0.6;
      opacity: 0;
    }

    h2 {
      font-weight: bold;
      line-height: 0.5;
    }

    .reset-button {
      background-color: #000;
      color: white;
      padding: 1rem;
      width: 100%;
      max-width: 400px;
      cursor: pointer;
      border: none;
    }
  }

  .backdrop {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.75);
    transition: opacity 0.5s;

    &.hide {
      opacity: 0;
    }
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-5px);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translateX(5px);
  }
}

@keyframes flip {
  0% {
    transform: rotateX(0);
  }

  50% {
    transform: rotateX(90deg);
  }

  100% {
    transform: rotateX(0);
  }
}

@keyframes dance {
  20% {
    transform: translateY(-50%);
  }

  40% {
    transform: translateY(5%);
  }

  60% {
    transform: translateY(-25%);
  }

  80% {
    transform: translateY(2.5%);
  }

  90% {
    transform: translateY(-5%);
  }

  100% {
    transform: translateY(0);
  }
}

@keyframes scale {
  from {
    opacity: 0;
    scale: 0.6;
  }

  to {
    opacity: 1;
    scale: 1;
  }
}
